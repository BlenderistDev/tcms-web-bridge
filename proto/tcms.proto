syntax = "proto3";

option go_package = "tcms/pkg/tcms";

package tcms;

import "google/protobuf/empty.proto";

service Tcms {
  rpc AddAutomation(Automation) returns (Result) {};
  rpc GetList(google.protobuf.Empty) returns (AutomationList) {};
  rpc RemoveAutomation(RemoveAutomationRequest) returns (Result) {};
  rpc GetConditionList(google.protobuf.Empty) returns (ConditionList) {};
  rpc GetActionList(google.protobuf.Empty) returns (ActionList) {};
  rpc GetTriggerList(google.protobuf.Empty) returns (TriggerList) {};
}

message Automation {
  string id = 1;
  repeated string triggers = 2;
  Condition condition = 3;
  repeated Action actions = 4;
}

message Condition {
  string name = 1;
  map<string, Mapping> mapping = 2;
  repeated Condition subConditions = 3;
}

message Action {
  string name = 1;
  map<string, Mapping> mapping = 2;
}

message Mapping {
  bool simple = 1;
  string name = 2;
  string value = 3;
}

message Result {
  bool success = 1;
  string error = 2;
}

message AutomationList {
  repeated Automation automationList = 1;
}

message RemoveAutomationRequest {
  string id = 1;
}

message ActionList {
  repeated ActionDescription actions = 1;
}

message ActionDescription {
  string name = 1;
  repeated Field fields = 2;
}

message Field {
  string name = 1;
  string type = 2;
  bool required = 3;
}

message ConditionList {
  repeated ConditionDescription conditions = 1;
}

message ConditionDescription {
  string name = 1;
  repeated Field fields = 2;
  int32 minSubConditionCount = 3;
  int32 maxSubConditionCount = 4;
}

message TriggerList {
  repeated TriggerDescription triggers = 1;
}

message TriggerDescription {
  string name = 1;
  message Field {
    string name = 1;
    string description = 2;
  }
  repeated Field fields = 2;
}

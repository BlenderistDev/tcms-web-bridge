// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: proto/telegram.proto

package telegram

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LoginMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phone string `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *LoginMessage) Reset() {
	*x = LoginMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telegram_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginMessage) ProtoMessage() {}

func (x *LoginMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telegram_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginMessage.ProtoReflect.Descriptor instead.
func (*LoginMessage) Descriptor() ([]byte, []int) {
	return file_proto_telegram_proto_rawDescGZIP(), []int{0}
}

func (x *LoginMessage) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type SignMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *SignMessage) Reset() {
	*x = SignMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telegram_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignMessage) ProtoMessage() {}

func (x *SignMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telegram_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignMessage.ProtoReflect.Descriptor instead.
func (*SignMessage) Descriptor() ([]byte, []int) {
	return file_proto_telegram_proto_rawDescGZIP(), []int{1}
}

func (x *SignMessage) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *Result) Reset() {
	*x = Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telegram_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Result) ProtoMessage() {}

func (x *Result) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telegram_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Result.ProtoReflect.Descriptor instead.
func (*Result) Descriptor() ([]byte, []int) {
	return file_proto_telegram_proto_rawDescGZIP(), []int{2}
}

func (x *Result) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type GetUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer string `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`
}

func (x *GetUserRequest) Reset() {
	*x = GetUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telegram_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRequest) ProtoMessage() {}

func (x *GetUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telegram_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_telegram_proto_rawDescGZIP(), []int{3}
}

func (x *GetUserRequest) GetPeer() string {
	if x != nil {
		return x.Peer
	}
	return ""
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Self           bool   `protobuf:"varint,1,opt,name=self,proto3" json:"self,omitempty"`
	Contact        bool   `protobuf:"varint,2,opt,name=contact,proto3" json:"contact,omitempty"`
	MutualContact  bool   `protobuf:"varint,3,opt,name=mutualContact,proto3" json:"mutualContact,omitempty"`
	Deleted        bool   `protobuf:"varint,4,opt,name=deleted,proto3" json:"deleted,omitempty"`
	Bot            bool   `protobuf:"varint,5,opt,name=bot,proto3" json:"bot,omitempty"`
	BotChatHistory bool   `protobuf:"varint,6,opt,name=botChatHistory,proto3" json:"botChatHistory,omitempty"`
	BotNochats     bool   `protobuf:"varint,7,opt,name=botNochats,proto3" json:"botNochats,omitempty"`
	Verified       bool   `protobuf:"varint,8,opt,name=verified,proto3" json:"verified,omitempty"`
	Restricted     bool   `protobuf:"varint,9,opt,name=restricted,proto3" json:"restricted,omitempty"`
	Min            bool   `protobuf:"varint,10,opt,name=min,proto3" json:"min,omitempty"`
	BotInlineGeo   bool   `protobuf:"varint,11,opt,name=botInlineGeo,proto3" json:"botInlineGeo,omitempty"`
	Support        bool   `protobuf:"varint,12,opt,name=support,proto3" json:"support,omitempty"`
	Scam           bool   `protobuf:"varint,13,opt,name=scam,proto3" json:"scam,omitempty"`
	ApplyMinPhoto  bool   `protobuf:"varint,14,opt,name=applyMinPhoto,proto3" json:"applyMinPhoto,omitempty"`
	Fake           bool   `protobuf:"varint,15,opt,name=fake,proto3" json:"fake,omitempty"`
	Id             string `protobuf:"bytes,16,opt,name=id,proto3" json:"id,omitempty"`
	AccessHash     string `protobuf:"bytes,17,opt,name=accessHash,proto3" json:"accessHash,omitempty"`
	FirstName      string `protobuf:"bytes,18,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName       string `protobuf:"bytes,19,opt,name=lastName,proto3" json:"lastName,omitempty"`
	Phone          string `protobuf:"bytes,20,opt,name=phone,proto3" json:"phone,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telegram_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telegram_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_proto_telegram_proto_rawDescGZIP(), []int{4}
}

func (x *User) GetSelf() bool {
	if x != nil {
		return x.Self
	}
	return false
}

func (x *User) GetContact() bool {
	if x != nil {
		return x.Contact
	}
	return false
}

func (x *User) GetMutualContact() bool {
	if x != nil {
		return x.MutualContact
	}
	return false
}

func (x *User) GetDeleted() bool {
	if x != nil {
		return x.Deleted
	}
	return false
}

func (x *User) GetBot() bool {
	if x != nil {
		return x.Bot
	}
	return false
}

func (x *User) GetBotChatHistory() bool {
	if x != nil {
		return x.BotChatHistory
	}
	return false
}

func (x *User) GetBotNochats() bool {
	if x != nil {
		return x.BotNochats
	}
	return false
}

func (x *User) GetVerified() bool {
	if x != nil {
		return x.Verified
	}
	return false
}

func (x *User) GetRestricted() bool {
	if x != nil {
		return x.Restricted
	}
	return false
}

func (x *User) GetMin() bool {
	if x != nil {
		return x.Min
	}
	return false
}

func (x *User) GetBotInlineGeo() bool {
	if x != nil {
		return x.BotInlineGeo
	}
	return false
}

func (x *User) GetSupport() bool {
	if x != nil {
		return x.Support
	}
	return false
}

func (x *User) GetScam() bool {
	if x != nil {
		return x.Scam
	}
	return false
}

func (x *User) GetApplyMinPhoto() bool {
	if x != nil {
		return x.ApplyMinPhoto
	}
	return false
}

func (x *User) GetFake() bool {
	if x != nil {
		return x.Fake
	}
	return false
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetAccessHash() string {
	if x != nil {
		return x.AccessHash
	}
	return ""
}

func (x *User) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *User) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *User) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

type UserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *UserResponse) Reset() {
	*x = UserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telegram_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserResponse) ProtoMessage() {}

func (x *UserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telegram_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserResponse.ProtoReflect.Descriptor instead.
func (*UserResponse) Descriptor() ([]byte, []int) {
	return file_proto_telegram_proto_rawDescGZIP(), []int{5}
}

func (x *UserResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

type SendMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer    string `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SendMessageRequest) Reset() {
	*x = SendMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telegram_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMessageRequest) ProtoMessage() {}

func (x *SendMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telegram_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMessageRequest.ProtoReflect.Descriptor instead.
func (*SendMessageRequest) Descriptor() ([]byte, []int) {
	return file_proto_telegram_proto_rawDescGZIP(), []int{6}
}

func (x *SendMessageRequest) GetPeer() string {
	if x != nil {
		return x.Peer
	}
	return ""
}

func (x *SendMessageRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DialogsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dialogs []*DialogResponse `protobuf:"bytes,1,rep,name=dialogs,proto3" json:"dialogs,omitempty"`
}

func (x *DialogsResponse) Reset() {
	*x = DialogsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telegram_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DialogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DialogsResponse) ProtoMessage() {}

func (x *DialogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telegram_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DialogsResponse.ProtoReflect.Descriptor instead.
func (*DialogsResponse) Descriptor() ([]byte, []int) {
	return file_proto_telegram_proto_rawDescGZIP(), []int{7}
}

func (x *DialogsResponse) GetDialogs() []*DialogResponse {
	if x != nil {
		return x.Dialogs
	}
	return nil
}

type DialogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dialog              *Dialog  `protobuf:"bytes,1,opt,name=dialog,proto3" json:"dialog,omitempty"`
	Pinned              bool     `protobuf:"varint,2,opt,name=pinned,proto3" json:"pinned,omitempty"`
	FolderId            int32    `protobuf:"varint,3,opt,name=folderId,proto3" json:"folderId,omitempty"`
	Archived            bool     `protobuf:"varint,4,opt,name=archived,proto3" json:"archived,omitempty"`
	Message             *Message `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	Date                int32    `protobuf:"varint,6,opt,name=date,proto3" json:"date,omitempty"`
	Id                  int64    `protobuf:"varint,7,opt,name=id,proto3" json:"id,omitempty"`
	Name                string   `protobuf:"bytes,8,opt,name=name,proto3" json:"name,omitempty"`
	Title               string   `protobuf:"bytes,9,opt,name=title,proto3" json:"title,omitempty"`
	UnreadCount         int32    `protobuf:"varint,10,opt,name=unreadCount,proto3" json:"unreadCount,omitempty"`
	UnreadMentionsCount int32    `protobuf:"varint,11,opt,name=unreadMentionsCount,proto3" json:"unreadMentionsCount,omitempty"`
	IsUser              bool     `protobuf:"varint,12,opt,name=isUser,proto3" json:"isUser,omitempty"`
	IsGroup             bool     `protobuf:"varint,13,opt,name=isGroup,proto3" json:"isGroup,omitempty"`
	IsChannel           bool     `protobuf:"varint,14,opt,name=isChannel,proto3" json:"isChannel,omitempty"`
}

func (x *DialogResponse) Reset() {
	*x = DialogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telegram_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DialogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DialogResponse) ProtoMessage() {}

func (x *DialogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telegram_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DialogResponse.ProtoReflect.Descriptor instead.
func (*DialogResponse) Descriptor() ([]byte, []int) {
	return file_proto_telegram_proto_rawDescGZIP(), []int{8}
}

func (x *DialogResponse) GetDialog() *Dialog {
	if x != nil {
		return x.Dialog
	}
	return nil
}

func (x *DialogResponse) GetPinned() bool {
	if x != nil {
		return x.Pinned
	}
	return false
}

func (x *DialogResponse) GetFolderId() int32 {
	if x != nil {
		return x.FolderId
	}
	return 0
}

func (x *DialogResponse) GetArchived() bool {
	if x != nil {
		return x.Archived
	}
	return false
}

func (x *DialogResponse) GetMessage() *Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *DialogResponse) GetDate() int32 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *DialogResponse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DialogResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DialogResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DialogResponse) GetUnreadCount() int32 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

func (x *DialogResponse) GetUnreadMentionsCount() int32 {
	if x != nil {
		return x.UnreadMentionsCount
	}
	return 0
}

func (x *DialogResponse) GetIsUser() bool {
	if x != nil {
		return x.IsUser
	}
	return false
}

func (x *DialogResponse) GetIsGroup() bool {
	if x != nil {
		return x.IsGroup
	}
	return false
}

func (x *DialogResponse) GetIsChannel() bool {
	if x != nil {
		return x.IsChannel
	}
	return false
}

type Dialog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pinned              bool            `protobuf:"varint,1,opt,name=pinned,proto3" json:"pinned,omitempty"`
	UnreadMark          bool            `protobuf:"varint,2,opt,name=unreadMark,proto3" json:"unreadMark,omitempty"`
	TopMessage          int32           `protobuf:"varint,3,opt,name=topMessage,proto3" json:"topMessage,omitempty"`
	ReadInboxMaxId      int32           `protobuf:"varint,4,opt,name=readInboxMaxId,proto3" json:"readInboxMaxId,omitempty"`
	ReadOutboxMaxId     int32           `protobuf:"varint,5,opt,name=readOutboxMaxId,proto3" json:"readOutboxMaxId,omitempty"`
	UnreadCount         int32           `protobuf:"varint,6,opt,name=unreadCount,proto3" json:"unreadCount,omitempty"`
	UnreadMentionsCount int32           `protobuf:"varint,7,opt,name=unreadMentionsCount,proto3" json:"unreadMentionsCount,omitempty"`
	NotifySettings      *NotifySettings `protobuf:"bytes,8,opt,name=notifySettings,proto3" json:"notifySettings,omitempty"`
	Pts                 int32           `protobuf:"varint,9,opt,name=pts,proto3" json:"pts,omitempty"`
	FolderId            int32           `protobuf:"varint,10,opt,name=folderId,proto3" json:"folderId,omitempty"`
}

func (x *Dialog) Reset() {
	*x = Dialog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telegram_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dialog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dialog) ProtoMessage() {}

func (x *Dialog) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telegram_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dialog.ProtoReflect.Descriptor instead.
func (*Dialog) Descriptor() ([]byte, []int) {
	return file_proto_telegram_proto_rawDescGZIP(), []int{9}
}

func (x *Dialog) GetPinned() bool {
	if x != nil {
		return x.Pinned
	}
	return false
}

func (x *Dialog) GetUnreadMark() bool {
	if x != nil {
		return x.UnreadMark
	}
	return false
}

func (x *Dialog) GetTopMessage() int32 {
	if x != nil {
		return x.TopMessage
	}
	return 0
}

func (x *Dialog) GetReadInboxMaxId() int32 {
	if x != nil {
		return x.ReadInboxMaxId
	}
	return 0
}

func (x *Dialog) GetReadOutboxMaxId() int32 {
	if x != nil {
		return x.ReadOutboxMaxId
	}
	return 0
}

func (x *Dialog) GetUnreadCount() int32 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

func (x *Dialog) GetUnreadMentionsCount() int32 {
	if x != nil {
		return x.UnreadMentionsCount
	}
	return 0
}

func (x *Dialog) GetNotifySettings() *NotifySettings {
	if x != nil {
		return x.NotifySettings
	}
	return nil
}

func (x *Dialog) GetPts() int32 {
	if x != nil {
		return x.Pts
	}
	return 0
}

func (x *Dialog) GetFolderId() int32 {
	if x != nil {
		return x.FolderId
	}
	return 0
}

type NotifySettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ShowPreviews bool   `protobuf:"varint,1,opt,name=showPreviews,proto3" json:"showPreviews,omitempty"`
	Silent       bool   `protobuf:"varint,2,opt,name=silent,proto3" json:"silent,omitempty"`
	MuteUntil    int32  `protobuf:"varint,3,opt,name=muteUntil,proto3" json:"muteUntil,omitempty"`
	Sound        string `protobuf:"bytes,4,opt,name=sound,proto3" json:"sound,omitempty"`
}

func (x *NotifySettings) Reset() {
	*x = NotifySettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telegram_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifySettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifySettings) ProtoMessage() {}

func (x *NotifySettings) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telegram_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifySettings.ProtoReflect.Descriptor instead.
func (*NotifySettings) Descriptor() ([]byte, []int) {
	return file_proto_telegram_proto_rawDescGZIP(), []int{10}
}

func (x *NotifySettings) GetShowPreviews() bool {
	if x != nil {
		return x.ShowPreviews
	}
	return false
}

func (x *NotifySettings) GetSilent() bool {
	if x != nil {
		return x.Silent
	}
	return false
}

func (x *NotifySettings) GetMuteUntil() int32 {
	if x != nil {
		return x.MuteUntil
	}
	return 0
}

func (x *NotifySettings) GetSound() string {
	if x != nil {
		return x.Sound
	}
	return ""
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Out           bool `protobuf:"varint,1,opt,name=out,proto3" json:"out,omitempty"`
	Mentioned     bool `protobuf:"varint,2,opt,name=mentioned,proto3" json:"mentioned,omitempty"`
	MediaUnread   bool `protobuf:"varint,3,opt,name=mediaUnread,proto3" json:"mediaUnread,omitempty"`
	Silent        bool `protobuf:"varint,4,opt,name=silent,proto3" json:"silent,omitempty"`
	FromScheduled bool `protobuf:"varint,5,opt,name=fromScheduled,proto3" json:"fromScheduled,omitempty"`
	Legacy        bool `protobuf:"varint,6,opt,name=legacy,proto3" json:"legacy,omitempty"`
	EditHide      bool `protobuf:"varint,7,opt,name=editHide,proto3" json:"editHide,omitempty"`
	Pinned        bool `protobuf:"varint,8,opt,name=pinned,proto3" json:"pinned,omitempty"`
	// @todo fwdFrom
	ViaBotId bool `protobuf:"varint,10,opt,name=viaBotId,proto3" json:"viaBotId,omitempty"`
	// @todo replyTo
	Date    int32  `protobuf:"varint,12,opt,name=date,proto3" json:"date,omitempty"`
	Message string `protobuf:"bytes,13,opt,name=message,proto3" json:"message,omitempty"`
	// @todo media
	// @todo replyMarkup
	// @todo entities
	Views    int32 `protobuf:"varint,16,opt,name=views,proto3" json:"views,omitempty"`
	Forwards int32 `protobuf:"varint,17,opt,name=forwards,proto3" json:"forwards,omitempty"`
	// @todo replies
	EditDate   int32  `protobuf:"varint,19,opt,name=editDate,proto3" json:"editDate,omitempty"`
	PostAuthor string `protobuf:"bytes,20,opt,name=postAuthor,proto3" json:"postAuthor,omitempty"`
	GroupedId  int64  `protobuf:"varint,21,opt,name=groupedId,proto3" json:"groupedId,omitempty"`
	// @todo restrictionReason
	// @todo action
	TtlPeriod int32 `protobuf:"varint,24,opt,name=ttlPeriod,proto3" json:"ttlPeriod,omitempty"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telegram_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telegram_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_proto_telegram_proto_rawDescGZIP(), []int{11}
}

func (x *Message) GetOut() bool {
	if x != nil {
		return x.Out
	}
	return false
}

func (x *Message) GetMentioned() bool {
	if x != nil {
		return x.Mentioned
	}
	return false
}

func (x *Message) GetMediaUnread() bool {
	if x != nil {
		return x.MediaUnread
	}
	return false
}

func (x *Message) GetSilent() bool {
	if x != nil {
		return x.Silent
	}
	return false
}

func (x *Message) GetFromScheduled() bool {
	if x != nil {
		return x.FromScheduled
	}
	return false
}

func (x *Message) GetLegacy() bool {
	if x != nil {
		return x.Legacy
	}
	return false
}

func (x *Message) GetEditHide() bool {
	if x != nil {
		return x.EditHide
	}
	return false
}

func (x *Message) GetPinned() bool {
	if x != nil {
		return x.Pinned
	}
	return false
}

func (x *Message) GetViaBotId() bool {
	if x != nil {
		return x.ViaBotId
	}
	return false
}

func (x *Message) GetDate() int32 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *Message) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Message) GetViews() int32 {
	if x != nil {
		return x.Views
	}
	return 0
}

func (x *Message) GetForwards() int32 {
	if x != nil {
		return x.Forwards
	}
	return 0
}

func (x *Message) GetEditDate() int32 {
	if x != nil {
		return x.EditDate
	}
	return 0
}

func (x *Message) GetPostAuthor() string {
	if x != nil {
		return x.PostAuthor
	}
	return ""
}

func (x *Message) GetGroupedId() int64 {
	if x != nil {
		return x.GroupedId
	}
	return 0
}

func (x *Message) GetTtlPeriod() int32 {
	if x != nil {
		return x.TtlPeriod
	}
	return 0
}

type MuteUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AccessHash string `protobuf:"bytes,2,opt,name=accessHash,proto3" json:"accessHash,omitempty"`
	Unmute     bool   `protobuf:"varint,3,opt,name=unmute,proto3" json:"unmute,omitempty"`
}

func (x *MuteUserRequest) Reset() {
	*x = MuteUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telegram_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuteUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuteUserRequest) ProtoMessage() {}

func (x *MuteUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telegram_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuteUserRequest.ProtoReflect.Descriptor instead.
func (*MuteUserRequest) Descriptor() ([]byte, []int) {
	return file_proto_telegram_proto_rawDescGZIP(), []int{12}
}

func (x *MuteUserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MuteUserRequest) GetAccessHash() string {
	if x != nil {
		return x.AccessHash
	}
	return ""
}

func (x *MuteUserRequest) GetUnmute() bool {
	if x != nil {
		return x.Unmute
	}
	return false
}

type MuteChatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Unmute bool   `protobuf:"varint,3,opt,name=unmute,proto3" json:"unmute,omitempty"`
}

func (x *MuteChatRequest) Reset() {
	*x = MuteChatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_telegram_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MuteChatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuteChatRequest) ProtoMessage() {}

func (x *MuteChatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_telegram_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuteChatRequest.ProtoReflect.Descriptor instead.
func (*MuteChatRequest) Descriptor() ([]byte, []int) {
	return file_proto_telegram_proto_rawDescGZIP(), []int{13}
}

func (x *MuteChatRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MuteChatRequest) GetUnmute() bool {
	if x != nil {
		return x.Unmute
	}
	return false
}

var File_proto_telegram_proto protoreflect.FileDescriptor

var file_proto_telegram_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x24, 0x0a,
	0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x22, 0x21, 0x0a, 0x0b, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x22, 0x0a, 0x06, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x24, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72,
	0x22, 0xa8, 0x04, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x6c,
	0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x65, 0x6c, 0x66, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x75, 0x74, 0x75, 0x61,
	0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x6d, 0x75, 0x74, 0x75, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x6f, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x62, 0x6f, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x6f, 0x74,
	0x43, 0x68, 0x61, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0e, 0x62, 0x6f, 0x74, 0x43, 0x68, 0x61, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x6f, 0x74, 0x4e, 0x6f, 0x63, 0x68, 0x61, 0x74, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x62, 0x6f, 0x74, 0x4e, 0x6f, 0x63, 0x68, 0x61, 0x74,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x1e, 0x0a,
	0x0a, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x65, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12,
	0x22, 0x0a, 0x0c, 0x62, 0x6f, 0x74, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x47, 0x65, 0x6f, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x62, 0x6f, 0x74, 0x49, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x47, 0x65, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x63, 0x61, 0x6d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x63, 0x61,
	0x6d, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x4d, 0x69, 0x6e, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x4d,
	0x69, 0x6e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x61, 0x6b, 0x65, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x66, 0x61, 0x6b, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x61, 0x73, 0x68, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x22, 0x32, 0x0a, 0x0c, 0x55,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x74, 0x65, 0x6c, 0x65,
	0x67, 0x72, 0x61, 0x6d, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22,
	0x42, 0x0a, 0x12, 0x53, 0x65, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0x45, 0x0a, 0x0f, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72,
	0x61, 0x6d, 0x2e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x07, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x22, 0xa9, 0x03, 0x0a, 0x0e, 0x44,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a,
	0x06, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52,
	0x06, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x69, 0x6e, 0x6e, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x12, 0x2b, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x67,
	0x72, 0x61, 0x6d, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x13, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x55, 0x73, 0x65, 0x72,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x55, 0x73, 0x65, 0x72, 0x12, 0x18,
	0x0a, 0x07, 0x69, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x69, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0xf6, 0x02, 0x0a, 0x06, 0x44, 0x69, 0x61, 0x6c, 0x6f,
	0x67, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x70, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x6e, 0x72,
	0x65, 0x61, 0x64, 0x4d, 0x61, 0x72, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x75,
	0x6e, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x61, 0x72, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x70,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74,
	0x6f, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x61,
	0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x4d, 0x61, 0x78, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x72, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x62, 0x6f, 0x78, 0x4d, 0x61, 0x78, 0x49,
	0x64, 0x12, 0x28, 0x0a, 0x0f, 0x72, 0x65, 0x61, 0x64, 0x4f, 0x75, 0x74, 0x62, 0x6f, 0x78, 0x4d,
	0x61, 0x78, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x72, 0x65, 0x61, 0x64,
	0x4f, 0x75, 0x74, 0x62, 0x6f, 0x78, 0x4d, 0x61, 0x78, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x75,
	0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a,
	0x13, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x75, 0x6e, 0x72, 0x65,
	0x61, 0x64, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x40, 0x0a, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72,
	0x61, 0x6d, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x52, 0x0e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x70, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22,
	0x80, 0x01, 0x0a, 0x0e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x68, 0x6f, 0x77, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x68, 0x6f, 0x77, 0x50, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x6c, 0x65, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x69, 0x6c, 0x65, 0x6e, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x6d, 0x75, 0x74, 0x65, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x6d, 0x75, 0x74, 0x65, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6f, 0x75,
	0x6e, 0x64, 0x22, 0xd9, 0x03, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x6f, 0x75, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x65, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x6c, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x73, 0x69, 0x6c, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x6d,
	0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x66, 0x72, 0x6f, 0x6d, 0x53, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x6c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x64, 0x69, 0x74, 0x48, 0x69,
	0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x65, 0x64, 0x69, 0x74, 0x48, 0x69,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x70, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x69,
	0x61, 0x42, 0x6f, 0x74, 0x49, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x69,
	0x61, 0x42, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x69, 0x65, 0x77, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x6f,
	0x72, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x64, 0x69, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x65, 0x64, 0x69, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x65, 0x64, 0x49, 0x64, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x65, 0x64, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x74, 0x6c, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x74, 0x6c, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0x59,
	0x0a, 0x0f, 0x4d, 0x75, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x61, 0x73, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x61, 0x73,
	0x68, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x75, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x22, 0x39, 0x0a, 0x0f, 0x4d, 0x75, 0x74,
	0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x6e, 0x6d, 0x75, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75, 0x6e,
	0x6d, 0x75, 0x74, 0x65, 0x32, 0xa4, 0x03, 0x0a, 0x08, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61,
	0x6d, 0x12, 0x33, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x16, 0x2e, 0x74, 0x65, 0x6c,
	0x65, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x1a, 0x10, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x15,
	0x2e, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x10, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d,
	0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x07, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x18, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x04, 0x53, 0x65, 0x6e, 0x64,
	0x12, 0x1c, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x53, 0x65, 0x6e, 0x64,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10,
	0x2e, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x00, 0x12, 0x41, 0x0a, 0x0a, 0x67, 0x65, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73,
	0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x19, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x67,
	0x72, 0x61, 0x6d, 0x2e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x08, 0x4d, 0x75, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x19, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x4d, 0x75, 0x74,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x74,
	0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00,
	0x12, 0x39, 0x0a, 0x08, 0x4d, 0x75, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x12, 0x19, 0x2e, 0x74,
	0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x4d, 0x75, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72,
	0x61, 0x6d, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x00, 0x42, 0x13, 0x5a, 0x11, 0x74,
	0x63, 0x6d, 0x73, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_telegram_proto_rawDescOnce sync.Once
	file_proto_telegram_proto_rawDescData = file_proto_telegram_proto_rawDesc
)

func file_proto_telegram_proto_rawDescGZIP() []byte {
	file_proto_telegram_proto_rawDescOnce.Do(func() {
		file_proto_telegram_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_telegram_proto_rawDescData)
	})
	return file_proto_telegram_proto_rawDescData
}

var file_proto_telegram_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_proto_telegram_proto_goTypes = []interface{}{
	(*LoginMessage)(nil),       // 0: telegram.LoginMessage
	(*SignMessage)(nil),        // 1: telegram.SignMessage
	(*Result)(nil),             // 2: telegram.Result
	(*GetUserRequest)(nil),     // 3: telegram.GetUserRequest
	(*User)(nil),               // 4: telegram.User
	(*UserResponse)(nil),       // 5: telegram.UserResponse
	(*SendMessageRequest)(nil), // 6: telegram.SendMessageRequest
	(*DialogsResponse)(nil),    // 7: telegram.DialogsResponse
	(*DialogResponse)(nil),     // 8: telegram.DialogResponse
	(*Dialog)(nil),             // 9: telegram.Dialog
	(*NotifySettings)(nil),     // 10: telegram.NotifySettings
	(*Message)(nil),            // 11: telegram.Message
	(*MuteUserRequest)(nil),    // 12: telegram.MuteUserRequest
	(*MuteChatRequest)(nil),    // 13: telegram.MuteChatRequest
	(*emptypb.Empty)(nil),      // 14: google.protobuf.Empty
}
var file_proto_telegram_proto_depIdxs = []int32{
	4,  // 0: telegram.UserResponse.user:type_name -> telegram.User
	8,  // 1: telegram.DialogsResponse.dialogs:type_name -> telegram.DialogResponse
	9,  // 2: telegram.DialogResponse.dialog:type_name -> telegram.Dialog
	11, // 3: telegram.DialogResponse.message:type_name -> telegram.Message
	10, // 4: telegram.Dialog.notifySettings:type_name -> telegram.NotifySettings
	0,  // 5: telegram.Telegram.Login:input_type -> telegram.LoginMessage
	1,  // 6: telegram.Telegram.Sign:input_type -> telegram.SignMessage
	3,  // 7: telegram.Telegram.GetUser:input_type -> telegram.GetUserRequest
	6,  // 8: telegram.Telegram.Send:input_type -> telegram.SendMessageRequest
	14, // 9: telegram.Telegram.getDialogs:input_type -> google.protobuf.Empty
	12, // 10: telegram.Telegram.MuteUser:input_type -> telegram.MuteUserRequest
	13, // 11: telegram.Telegram.MuteChat:input_type -> telegram.MuteChatRequest
	2,  // 12: telegram.Telegram.Login:output_type -> telegram.Result
	2,  // 13: telegram.Telegram.Sign:output_type -> telegram.Result
	5,  // 14: telegram.Telegram.GetUser:output_type -> telegram.UserResponse
	2,  // 15: telegram.Telegram.Send:output_type -> telegram.Result
	7,  // 16: telegram.Telegram.getDialogs:output_type -> telegram.DialogsResponse
	2,  // 17: telegram.Telegram.MuteUser:output_type -> telegram.Result
	2,  // 18: telegram.Telegram.MuteChat:output_type -> telegram.Result
	12, // [12:19] is the sub-list for method output_type
	5,  // [5:12] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_proto_telegram_proto_init() }
func file_proto_telegram_proto_init() {
	if File_proto_telegram_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_telegram_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telegram_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telegram_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telegram_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telegram_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telegram_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telegram_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telegram_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DialogsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telegram_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DialogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telegram_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dialog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telegram_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifySettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telegram_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telegram_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MuteUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_telegram_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MuteChatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_telegram_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_telegram_proto_goTypes,
		DependencyIndexes: file_proto_telegram_proto_depIdxs,
		MessageInfos:      file_proto_telegram_proto_msgTypes,
	}.Build()
	File_proto_telegram_proto = out.File
	file_proto_telegram_proto_rawDesc = nil
	file_proto_telegram_proto_goTypes = nil
	file_proto_telegram_proto_depIdxs = nil
}
